<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>webpack on VISIONARY</title><link>https://visionary.top/tags/webpack/</link><description>Recent content in webpack on VISIONARY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://visionary.top/tags/webpack/index.xml" rel="self" type="application/rss+xml"/><item><title>webpack中常用的 loader &amp; 自定义 loader</title><link>https://visionary.top/blog/framework/webpack_loader/</link><pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate><guid>https://visionary.top/blog/framework/webpack_loader/</guid><description>@svgr/webpack 可以使得 svg 文件以组件形式加载
yarn add @svgr/webpack --dev loader:[{ test: /\.svg$/, use: [&amp;#39;@svgr/webpack&amp;#39;], exclude: [/asPicture/,], }] style-loader\css-loader\sass-loader\postcss-loader style-loader: 用于将css编译完成的样式，挂载到页面style标签上。 需要注意loader执行顺序，style-loader放到第一位，因为loader都是从下往上执行，最后全部编译完成挂载到style上
css-loader: 用于识别.css文件, 处理css必须配合style-loader共同使用，只安装css-loader样式不会生效。
postcss-loader :用于补充css样式各种浏览器内核前缀，太方便了，不用我们手动写啦。
cnpm i style-loader -D module.exports = { module: { rules: [ { test: /\.css/, use: [&amp;#34;style-loader&amp;#34;] } ] } } babel-loader \ ts-loader 将Es6+ 语法转换为Es5语法。 ts =&amp;gt; js
##html-loader 我们有时候想引入一个html页面代码片段赋值给DOM元素内容使用，这时就用到html-loader
import Content from &amp;#34;../template.html&amp;#34; document.</description></item><item><title>如何优化你的前端项目</title><link>https://visionary.top/blog/framework/%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E4%BD%A0%E7%9A%84%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/</link><pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate><guid>https://visionary.top/blog/framework/%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E4%BD%A0%E7%9A%84%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/</guid><description/></item><item><title>Micro-Frontends with qiankun</title><link>https://visionary.top/blog/framework/micro-frontend-with-qiankun/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://visionary.top/blog/framework/micro-frontend-with-qiankun/</guid><description>&lt;p>可以实现多团队共同开发，每个团队维护使用了不同前端框架的项目，独立使用git，也可以在新网站上集成旧项目&lt;/p></description></item></channel></rss>